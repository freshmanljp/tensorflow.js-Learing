{"id":"../node_modules/vega-transforms/src/Field.js","dependencies":[{"name":"D:\\开发\\前端工程文件夹\\tensorflow.js\\test\\package.json","includedInParent":true,"mtime":1598515220866},{"name":"D:\\开发\\前端工程文件夹\\tensorflow.js\\test\\node_modules\\vega-transforms\\package.json","includedInParent":true,"mtime":1598515206302},{"name":"vega-dataflow","loc":{"line":1,"column":23},"parent":"D:\\开发\\前端工程文件夹\\tensorflow.js\\test\\node_modules\\vega-transforms\\src\\Field.js","resolved":"D:\\开发\\前端工程文件夹\\tensorflow.js\\test\\node_modules\\vega-dataflow\\index.js"},{"name":"vega-util","loc":{"line":2,"column":46},"parent":"D:\\开发\\前端工程文件夹\\tensorflow.js\\test\\node_modules\\vega-transforms\\src\\Field.js","resolved":"D:\\开发\\前端工程文件夹\\tensorflow.js\\test\\node_modules\\vega-util\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Field;\n\nvar _vegaDataflow = require(\"vega-dataflow\");\n\nvar _vegaUtil = require(\"vega-util\");\n\n/**\n * Generates one or more field accessor functions.\n * If the 'name' parameter is an array, an array of field accessors\n * will be created and the 'as' parameter will be ignored.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {string} params.name - The field name(s) to access.\n * @param {string} params.as - The accessor function name.\n */\nfunction Field(params) {\n  _vegaDataflow.Operator.call(this, null, update, params);\n}\n\n(0, _vegaUtil.inherits)(Field, _vegaDataflow.Operator);\n\nfunction update(_) {\n  return this.value && !_.modified() ? this.value : (0, _vegaUtil.isArray)(_.name) ? (0, _vegaUtil.array)(_.name).map(f => (0, _vegaUtil.field)(f)) : (0, _vegaUtil.field)(_.name, _.as);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":4,"column":0}},{"generated":{"line":21,"column":0},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":13,"column":15}},{"name":"Field","generated":{"line":21,"column":9},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":13,"column":24}},{"generated":{"line":21,"column":14},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":13,"column":15}},{"name":"params","generated":{"line":21,"column":15},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":13,"column":30}},{"generated":{"line":21,"column":21},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":13,"column":15}},{"generated":{"line":21,"column":23},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":13,"column":38}},{"name":"Operator","generated":{"line":22,"column":0},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":14,"column":2}},{"name":"call","generated":{"line":22,"column":25},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":14,"column":11}},{"generated":{"line":22,"column":29},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":14,"column":2}},{"generated":{"line":22,"column":30},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":14,"column":16}},{"generated":{"line":22,"column":34},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":14,"column":2}},{"generated":{"line":22,"column":36},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":14,"column":22}},{"generated":{"line":22,"column":40},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":14,"column":2}},{"name":"update","generated":{"line":22,"column":42},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":14,"column":28}},{"generated":{"line":22,"column":48},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":14,"column":2}},{"name":"params","generated":{"line":22,"column":50},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":14,"column":36}},{"generated":{"line":22,"column":56},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":14,"column":2}},{"generated":{"line":23,"column":0},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":15,"column":1}},{"generated":{"line":25,"column":0},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":17,"column":0}},{"name":"Field","generated":{"line":25,"column":24},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":17,"column":9}},{"generated":{"line":25,"column":29},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":17,"column":0}},{"name":"Operator","generated":{"line":25,"column":31},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":17,"column":16}},{"generated":{"line":25,"column":53},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":17,"column":0}},{"generated":{"line":27,"column":0},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":19,"column":0}},{"name":"update","generated":{"line":27,"column":9},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":19,"column":9}},{"generated":{"line":27,"column":15},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":19,"column":0}},{"name":"_","generated":{"line":27,"column":16},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":19,"column":16}},{"generated":{"line":27,"column":17},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":19,"column":0}},{"generated":{"line":27,"column":19},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":19,"column":19}},{"generated":{"line":28,"column":0},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":20,"column":2}},{"generated":{"line":28,"column":9},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":20,"column":10}},{"name":"value","generated":{"line":28,"column":14},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":20,"column":15}},{"generated":{"line":28,"column":19},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":20,"column":10}},{"generated":{"line":28,"column":23},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":20,"column":24}},{"name":"_","generated":{"line":28,"column":24},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":20,"column":25}},{"generated":{"line":28,"column":25},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":20,"column":26}},{"name":"modified","generated":{"line":28,"column":26},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":20,"column":27}},{"generated":{"line":28,"column":34},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":20,"column":25}},{"generated":{"line":28,"column":36},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":20,"column":9}},{"generated":{"line":28,"column":39},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":20,"column":41}},{"name":"value","generated":{"line":28,"column":44},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":20,"column":46}},{"generated":{"line":28,"column":49},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":20,"column":9}},{"generated":{"line":28,"column":52},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":21,"column":6}},{"name":"_","generated":{"line":28,"column":75},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":21,"column":14}},{"generated":{"line":28,"column":76},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":21,"column":15}},{"name":"name","generated":{"line":28,"column":77},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":21,"column":16}},{"generated":{"line":28,"column":81},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":21,"column":6}},{"generated":{"line":28,"column":85},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":21,"column":24}},{"name":"_","generated":{"line":28,"column":106},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":21,"column":30}},{"generated":{"line":28,"column":107},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":21,"column":31}},{"name":"name","generated":{"line":28,"column":108},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":21,"column":32}},{"generated":{"line":28,"column":112},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":21,"column":24}},{"name":"map","generated":{"line":28,"column":114},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":21,"column":38}},{"generated":{"line":28,"column":117},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":21,"column":24}},{"name":"f","generated":{"line":28,"column":118},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":21,"column":42}},{"generated":{"line":28,"column":119},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":21,"column":43}},{"generated":{"line":28,"column":123},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":21,"column":47}},{"name":"f","generated":{"line":28,"column":144},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":21,"column":53}},{"generated":{"line":28,"column":145},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":21,"column":47}},{"generated":{"line":28,"column":146},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":21,"column":24}},{"generated":{"line":28,"column":147},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":21,"column":6}},{"generated":{"line":28,"column":150},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":22,"column":6}},{"name":"_","generated":{"line":28,"column":171},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":22,"column":12}},{"generated":{"line":28,"column":172},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":22,"column":13}},{"name":"name","generated":{"line":28,"column":173},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":22,"column":14}},{"generated":{"line":28,"column":177},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":22,"column":6}},{"name":"_","generated":{"line":28,"column":179},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":22,"column":20}},{"generated":{"line":28,"column":180},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":22,"column":21}},{"name":"as","generated":{"line":28,"column":181},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":22,"column":22}},{"generated":{"line":28,"column":183},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":22,"column":6}},{"generated":{"line":28,"column":184},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":20,"column":2}},{"generated":{"line":29,"column":0},"source":"../node_modules/vega-transforms/src/Field.js","original":{"line":23,"column":1}}],"sources":{"../node_modules/vega-transforms/src/Field.js":"import {Operator} from 'vega-dataflow';\nimport {array, field, inherits, isArray} from 'vega-util';\n\n/**\n * Generates one or more field accessor functions.\n * If the 'name' parameter is an array, an array of field accessors\n * will be created and the 'as' parameter will be ignored.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {string} params.name - The field name(s) to access.\n * @param {string} params.as - The accessor function name.\n */\nexport default function Field(params) {\n  Operator.call(this, null, update, params);\n}\n\ninherits(Field, Operator);\n\nfunction update(_) {\n  return (this.value && !_.modified()) ? this.value\n    : isArray(_.name) ? array(_.name).map(f => field(f))\n    : field(_.name, _.as);\n}\n"},"lineCount":null}},"error":null,"hash":"8298b34c3ce49d9129a1ecad772dae5e","cacheData":{"env":{}}}